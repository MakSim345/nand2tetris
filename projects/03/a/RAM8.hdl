/**
 * Completed 2017-SEP
 *
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    /* DMux8Way Interface:
    IN  in, sel[3];
    OUT a, b, c, d, e, f, g, h; */
    DMux8Way(in=load, sel=address,
                      a=DMuxLoadA, b=DMuxLoadB, c=DMuxLoadC,
                      d=DMuxLoadD, e=DMuxLoadE, f=DMuxLoadF,
                      g=DMuxLoadG, h=DMuxLoadH);

    /* Register Interface:
     * IN  in[16], load;
     * OUT out[16]; */
    Register(in=in, load=DMuxLoadA, out=RegOut16A);
    Register(in=in, load=DMuxLoadB, out=RegOut16B);
    Register(in=in, load=DMuxLoadC, out=RegOut16C);
    Register(in=in, load=DMuxLoadD, out=RegOut16D);
    Register(in=in, load=DMuxLoadE, out=RegOut16E);
    Register(in=in, load=DMuxLoadF, out=RegOut16F);
    Register(in=in, load=DMuxLoadG, out=RegOut16G);
    Register(in=in, load=DMuxLoadH, out=RegOut16H);

    /* Mux8Way16 Interface:
     * IN a[16], b[16], c[16], d[16], e[16], f[16], g[16], h[16], sel[3];
     * OUT out[16]; */
    Mux8Way16(sel=address, a=RegOut16A, b=RegOut16B, c=RegOut16C,
                           d=RegOut16D, e=RegOut16E, f=RegOut16F,
                           g=RegOut16G, h=RegOut16H, out=out);
}

